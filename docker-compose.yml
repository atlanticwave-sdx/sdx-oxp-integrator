version: '3.9'

services:

  amlight:
    container_name: amlight
    image: amlight
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.2
    ports:
      - 6653:6653
      - 8181:8181
    volumes:
      - ./scripts:/scripts
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: ${AMPATH_MONGO_USERNAME}
      MONGO_PASSWORD: ${AMPATH_MONGO_PASSWORD}
      MONGO_DBNAME: ${AMPATH_MONGO_DBNAME}
    depends_on:
      - mongo-ready
    entrypoint: ["/scripts/amlight.sh"]

  sax:
    container_name: sax
    image: sax
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.3
    ports:
      - 6654:6653
      - 8282:8181
    volumes:
      - ./scripts:/scripts
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: ${SAX_MONGO_USERNAME}
      MONGO_PASSWORD: ${SAX_MONGO_PASSWORD}
      MONGO_DBNAME: ${SAX_MONGO_DBNAME}
      # 
    depends_on:
      - mongo-ready
    entrypoint: ["/scripts/sax.sh"]

  tenet:
    container_name: tenet
    image: tenet
    privileged: true
    restart: always
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.4
    ports:
      - 6655:6653
      - 8383:8181
    volumes:
      - ./scripts:/scripts
    env_file: 
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INITDB_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_USERNAME: ${TENET_MONGO_USERNAME}
      MONGO_PASSWORD: ${TENET_MONGO_PASSWORD}
      MONGO_DBNAME: ${TENET_MONGO_DBNAME}
    depends_on:
      - mongo-ready
    entrypoint: ["/scripts/tenet.sh"]

  mongo1t:
    container_name: mongo1t
    image: mongo-db
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.6
    ports:
      - 27027:27027
    volumes:
      - ./os-base/mongo-base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27027" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo2t:
    container_name: mongo2t
    image: mongo-db
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.7
    ports:
      - 27028:27028
    volumes:
      - ./os-base/mongo-base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27028" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo3t:
    container_name: mongo3t
    image: mongo-db
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.8
    ports:
      - 27029:27029
    volumes:
      - ./os-base/mongo-base:/mongo_base
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--port", "27029" ]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}

  mongo-setup:
    container_name: mongo-rs-init
    image: mongo-db
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.9
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-init.sh"]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}
    depends_on:
      - mongo1t
      - mongo2t
      - mongo3t

  mongo-ready:
    container_name: mongo-test-ready
    image: mongo-db
    restart: on-failure
    networks:
      kytos_network:
        ipv4_address: 192.168.0.10
    volumes:
      - ./scripts:/scripts
    entrypoint: ["/scripts/rs-add.sh"]
    env_file:
      - .env
    environment:
      MONGODB_CONNSTRING: ${MONGODB_CONNSTRING}
      MONGO_HOST_SEEDS: ${MONGO_HOST_SEEDS}
      MONGO_INIT_ROOT_USERNAME: ${ROOT_DB_USER}
      MONGO_INIT_ROOT_PASSWORD: ${ROOT_DB_PASS}
      MONGO_DBNAME: ${ROOT_DB}
    depends_on:
      - mongo-setup

  mininet:
    container_name: mininet
    image: mininet
    privileged: true
    tty: true
    networks:
      kytos_network:
        ipv4_address: 192.168.0.11
    volumes:
      - /lib/modules:/lib/modules
    depends_on:
      - amlight
      - sax
      - tenet

  nginx:
    container_name: nginx
    image: nginx
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.13
    ports:
      - 80:8080
    volumes:
      - ./os-base/nginx-base:/oxpoapi
    environment:
      SWAGGER_JSON: /oxpoapi/oxpoapi.json
      COMMAND_1: ${COMMAND_1}
      COMMAND_2: ${COMMAND_2}
      COMMAND_3: ${COMMAND_3}
      URL_1: ${URL_1}
      URL_2: ${URL_2}
      URL_3: ${URL_3}
      AMPATH_OXPO_URL: ${AMPATH_OXPO_URL}
      SAX_OXPO_URL: ${SAX_OXPO_URL}
      TENET_OXPO_URL: ${TENET_OXPO_URL}

  ampath-topology-conversion:
    container_name: ampath-topology-conversion
    image: topology-conversion
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.15
    ports:
      - 8015:8000
    env_file:
      - .env
    environment:
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO_NAME: ${AMPATH_OXPO_NAME}
      OXPO_URL: ${AMPATH_OXPO_URL}
      OXPO_METADATA: ${AMPATH_META_DATA}
      OXP_TOPOLOGY_URL: ${AMPATH_OXPO_TOPOLOGY_URL}
      OXP_CONNECTION_URL: ${AMPATH_OXPO_CONNECTION_URL}
      OXP_TOPOLOGY_URN: ${OXP_TOPOLOGY_URN}
    entrypoint: [ "python3", "-m", "uvicorn", "run:app", "--host", "0.0.0.0", "--port", "8000" ]


  sax-topology-conversion:
    container_name: sax-topology-conversion
    image: topology-conversion
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.16
    ports:
      - 8016:8000
    env_file:
      - .env
    environment:
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO_NAME: ${SAX_OXPO_NAME}
      OXPO_URL: ${SAX_OXPO_URL}
      OXPO_METADATA: ${SAX_META_DATA}
      OXP_TOPOLOGY_URL: ${SAX_OXPO_TOPOLOGY_URL}
      OXP_CONNECTION_URL: ${SAX_OXPO_CONNECTION_URL}
      OXP_TOPOLOGY_URN: ${OXP_TOPOLOGY_URN}
    entrypoint: [ "python3", "-m", "uvicorn", "run:app", "--host", "0.0.0.0", "--port", "8000" ]


  tenet-topology-conversion:
    container_name: tenet-topology-conversion
    image: topology-conversion
    privileged: true
    tty: true
    restart: always
    networks:
      kytos_network:
        ipv4_address: 192.168.0.17
    ports:
      - 8017:8000
    env_file:
      - .env
    environment:
      MODEL_VERSION: ${MODEL_VERSION}
      OXPO_NAME: ${TENET_OXPO_NAME}
      OXPO_URL: ${TENET_OXPO_URL}
      OXPO_METADATA: ${TENET_META_DATA}
      OXP_TOPOLOGY_URL: ${TENET_OXPO_TOPOLOGY_URL}
      OXP_CONNECTION_URL: ${TENET_OXPO_CONNECTION_URL}
      OXP_TOPOLOGY_URN: ${OXP_TOPOLOGY_URN}
    entrypoint: [ "python3", "-m", "uvicorn", "run:app", "--host", "0.0.0.0", "--port", "8000" ]

networks:
  kytos_network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1

volumes:
  persistent:
