# nginx.conf  --  docker-openresty
#

worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

events {
    worker_connections  1024;
}

http {

    lua_shared_dict discovery 1m;
    lua_shared_dict jwks 1m;

    resolver 8.8.8.8 ipv4=on valid=300s;  # Use Google's public DNS or another DNS resolver
    resolver_timeout 5s;

    upstream backend-service {
        server 67.17.206.221;  # Replace with the correct IP and port of your backend service
    }

    server {
        listen 443 ssl;
        server_name 190.103.184.197;

        ssl_certificate /etc/openresty/ssl/atlanticwave_sdx.crt;
        ssl_certificate_key /etc/openresty/ssl/atlanticwave_sdx.key;
        ssl_trusted_certificate /etc/openresty/ssl/ca_bundle.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # OAuth2/OIDC Authentication
        location / {
            access_by_lua_file /usr/local/openresty/nginx/lua/auth.lua;
	    # proxy_pass http://localhost:8080; # Example backend
	    proxy_pass http://backend-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /callback {
            content_by_lua_file /usr/local/openresty/nginx/lua/auth.lua;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name 190.103.184.197;

        return 301 https://$host$request_uri;
    }


}

# include /etc/nginx/conf.d/*.main;
